mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN", 死亡率 = "SP.DYN.CDRT.IN") +
theme(legend.position = "none")
```
df_pop_related_extra |> filter(year == 2019, income == "High income") |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN", 死亡率 = "SP.DYN.CDRT.IN") +
theme(legend.position = "none")
```
df_pop_related_extra |> filter(year == 2019, income == "High income") |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN", 死亡率 = "SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(year == 2019, income == "High income") |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(year == 2019, income == "High income") |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(year == 2019, income == "High income") |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(year == 2019, income == "High income", pop > 10000000) |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(year == 2019, income == "High income", pop > 10000000) |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", subtilte = "人口1000万人以上", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(year == 2019, income == "High income", pop > 10000000) |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", subtilte = "人口1000万人以上（色は地域別）", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(year == 2019, income == "High income", pop > 10000000) |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", subtilte = "人口1000万人以上（色は地域別）", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(year == 2019, income == "High income", pop > 10000000) |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", subtitle = "人口1000万人以上（色は地域別）", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(year == 2019, income == "High income", pop > 10000000) |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", subtitle = "人口1000万人以上（色は地域別）人口制限なしでも日本は最下位", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(pop > 50000000, pop < 200000000) |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "5000万人以上2億人以下の高所得の国の人口推移")
df_pop_related_extra |> filter(pop > 50000000, pop < 200000000, income == "Hight income") |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "5000万人以上2億人以下の高所得の国の人口推移")
df_pop_related_extra |> filter(pop > 50000000, pop < 200000000, income == "High income") |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "5000万人以上2億人以下の高所得の国の人口推移")
df_pop_related_extra |> filter(pop > 50000000, pop < 150000000, income == "High income") |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "5000万人以上2億人以下の高所得の国の人口推移")
df_pop_related_extra |> filter(pop > 50000000, pop < 150000000, income == "High income") |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "5000万人以上15000万人以下の高所得の国の人口推移")
df_pop_related_extra |> filter(pop > 50000000, pop < 150000000, income == "High income") |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "5000万人以上15000万人以下（米国以外）の高所得の国の人口推移")
df_pop_related_extra |> filter(pop > 50000000, pop < 150000000, income == "High income") |>
pivot_longer(pop:old) |> filter(name %in% c("young", "old")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line() + labs(title = "5000万人以上15000万人以下（米国以外）の高所得の国の高齢者・若年者扶養率")
df_pop_related_extra |> filter(pop > 50000000, income == "High income") |>
pivot_longer(pop:old) |> filter(name %in% c("young", "old")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line() + labs(title = "5000万人以上の高所得の国の\n高齢者・若年者扶養率")
df_pop_related_extra |> filter(pop > 50000000, income == "High income") |>
pivot_longer(pop:old) |> filter(name %in% c("young", "old")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line() + labs(title = "5000万人以上の高所得の国の高齢者・若年者扶養率")
df_pop_related_extra |> filter(pop > 40000000, income == "High income") |>
pivot_longer(pop:old) |> filter(name %in% c("young", "old")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line() + labs(title = "5000万人以上の高所得の国の高齢者・若年者扶養率")
df_pop_related_extra |> filter(pop > 50000000, income == "High income") |>
pivot_longer(pop:old) |> filter(name %in% c("young", "old")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line() + labs(title = "5000万人以上の高所得の国の高齢者・若年者扶養率")
df_gini_2.15 <- WDI(indicator = c(gini = "SI.POV.GINI", under_2.15 = "SI.POV.DDAY"), extra = TRUE)
write_csv(df_gini_2.15, "data/gini_2.15.csv")
df_gini_2.15 <- read_csv("data/gini_2.15.csv")
df_gini_2.15 |> pivot_wider(gini:under2.15) |> drop_na(value) |> group_by(country) |> filter(year = max(year)) |> distinct(region)
df_gini_2.15 |> pivot_longer(gini:under2.15) |> drop_na(value) |> group_by(country) |> filter(year = max(year)) |> distinct(region)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year = max(year)) |> distinct(region)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> distinct(region)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> ggplot(aes(region, value, fill = name)) + geom_boxplot()
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> ggplot(aes(region, value, fill = name)) + geom_boxplot() +
labs(title = "Gini係数が高い二地域の、絶対的貧困の割合")
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> ggplot(aes(region, value, fill = name)) + geom_boxplot() +
labs(title = "Gini係数が高い二地域の、絶対的貧困の割合", fill = "")
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> ggplot(aes(region, value, fill = name)) + geom_boxplot() +
labs(title = "Gini係数が高い二地域の、絶対的貧困の割合", subtitle = "gini: ジニ指数、under_2.15: 1日2.15ドル以下で生活する割合", fill = "", y = "パーセント")
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> ggplot(aes(region, value, fill = name)) + geom_boxplot() +
labs(title = "Gini係数が高い二地域の、絶対的貧困の割合", subtitle = "gini: ジニ指数、under_2.15: 1日2.15ドル以下で生活する割合", fill = "", x = "", y = "パーセント")
gini_outlier <- df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> ggplot(aes(region, value, fill = name)) + geom_boxplot() +
labs(title = "Gini係数が高い二地域の、絶対的貧困の割合", subtitle = "gini: ジニ指数、under_2.15: 1日2.15ドル以下で生活する割合", fill = "", x = "", y = "パーセント")
gini_outlier |> ggplotly()
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> ggplot(aes(region, value, fill = name)) + geom_boxplot() +
labs(title = "Gini係数が高い二地域の、絶対的貧困の割合", subtitle = "gini: ジニ指数、under_2.15: 1日2.15ドル以下で生活する割合", fill = "", x = "", y = "パーセント")
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean"))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> arrange(desc(gini), desc(under_2.15))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> arrange(desc(value))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> arrange(desc(value)) |> select(country, year, name, value, region)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> arrange(desc(value)) |> select(country, year, name, value, region) |>
pivot_wider(names_from = name, values_from = value)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> arrange(desc(value)) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, under_2.15, gini, region)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> arrange(desc(value)) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, gini, under_2.15, region)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, gini, under_2.15, region) |> arrange(desc(gini), desc(under_2.15))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, gini, under_2.15, region) |> arrange(desc(gini), desc(under_2.15)) |>
filter(top_n(gini, n=5) | top_n(under_2.15, n = 5))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, gini, under_2.15, region) |> arrange(desc(gini), desc(under_2.15)) |>
filter(top_n(gini, n=5) OR top_n(under_2.15, n = 5))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, gini, under_2.15, region) |> arrange(desc(gini), desc(under_2.15)) |>
filter(top_n(gini, n=5))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, gini, under_2.15, region) |> arrange(desc(gini), desc(under_2.15))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, gini, under_2.15, region) |> arrange(desc(under_2.15))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, gini, under_2.15, region) |>
filter(gini > 54 | under_2.15 > 66) |> arrange(desc(gini, under_2.15))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
pivot_wider(names_from = name, values_from = value) |>
select(country, year, gini, under_2.15, region) |>
filter(gini > 54 | under_2.15 > 66) |> arrange(desc(gini), desc(under_2.15))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
group_by(name) |> summarize(rank(value))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
group_by(name) |> arrange(value) |> summarize(n = rank(value))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
group_by(name) |> arrange(desc(value)) |> summarize(country = country, n = rank(value)) |> filter(n<=5)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
group_by(name) |> arrange(desc(value)) |> summarize(country = country, value, n = rank(value)) |> filter(n<=5)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
group_by(region, name) |> arrange(desc(value)) |> summarize(country = country, value, n = rank(value)) |> filter(n<=5)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
group_by(region, name) |> arrange(desc(value)) |> summarize(country = country, value, n = rank(value)) |> filter(n<=3)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean"))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
group_by(region, name) |> arrange(desc(value))
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Latin America & Caribbean", name == "under_2.15") |> arrange(desc(value)) |> slice_head(n=3)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Sub-Saharan Africa", name == "gini") |> arrange(desc(value)) |> slice_head(n=2)
outlier_gini <- df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Sub-Saharan Africa", name == "gini") |> arrange(desc(value)) |> slice_head(n=2)
outlier_under_2.15 <- df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Latin America & Caribbean", name == "under_2.15") |> arrange(desc(value)) |> slice_head(n=3) |> rbind(outlier_gini)
outlier_gini <- df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Sub-Saharan Africa", name == "gini") |> arrange(desc(value)) |> slice_head(n=2)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Latin America & Caribbean", name == "under_2.15") |> arrange(desc(value)) |> slice_head(n=3) |> rbind(outlier_gini)
df_mil_ed_extra <- WDI(indicator = c(military_gov = "MS.MIL.XPND.ZS,
education_gov = "SE.XPD.TOTL.GB.ZS"), extra = TRUE)
df_mil_ed_extra <- WDI(indicator = c(military_gov = "MS.MIL.XPND.ZS",
education_gov = "SE.XPD.TOTL.GB.ZS"), extra = TRUE)
write_csv(df_mil_ed_extra, "data/mil_ed_extra.csv")
df_mil_ed_extra <- read_csv("data/mil_ed_extra.csv")
REGION <- c("1A", "1W", "4E", "6F", "6N", "6X", "7E", "8S", "A4", "A5",
"A9", "B1", "B2", "B3", "B4", "B6", "B7", "B8", "C4", "C5", "C6",
"C7", "C8", "C9", "D2", "D3", "D4", "D5", "D6", "D7", "EU", "F1",
"F6", "M1", "M2", "N6", "OE", "R6", "S1", "S2", "S3", "S4", "T2",
"T3", "T4", "T5", "T6", "T7", "V1", "V2", "V3", "V4", "XC", "XD",
"XE", "XF", "XG", "XH", "XI", "XJ", "XL", "XM", "XN", "XO", "XP",
"XQ", "XT", "XU", "XY", "Z4", "Z7", "ZB", "ZF", "ZG", "ZH", "ZI",
"ZJ", "ZQ", "ZT")
df_mil_ed_extra |> filter(!(iso2c %in% REGION), year == 2020) |> drop_na(education_gov, military_gov) |> cor(education_gov, military_gov)
df_mil_ed_extra |> filter(!(iso2c %in% REGION), year == 2020) |> select(education_gov, military_gov) |> drop_na(education_gov, military_gov) |> cor(education_gov, military_gov)
df_mil_ed_extra |> filter(!(iso2c %in% REGION), year == 2020) |> select(education_gov, military_gov) |> drop_na(education_gov, military_gov) |> cor()
df_environment <- read_csv("data/environment.csv")
df_environment |> filter(!(iso2c %in% REGION)) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor()
df_environment |> filter(!(iso2c %in% REGION)) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2020) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2015) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment <- read_csv("data/environment.csv")
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2020) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |>  # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |>  # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2020) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2015) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |>
ggplot(aes(renewable, co2pcap)) + geom_point()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |>
ggplot(aes(renewable, co2pcap)) + geom_point() + geom_smooth(formula = 'y~x', method = "lm", se = FALSE)
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |>
ggplot(aes(renewable, co2pcap)) + geom_point() + geom_smooth(formula = 'y~x', method = "lm", se = FALSE) + labs(title = "再生可能エネルギーによる発電割合と一人当たりの二酸化炭素排出量の相関")
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |>
ggplot(aes(renewable, co2pcap)) + geom_point() + geom_smooth(formula = 'y~x', method = "lm", se = FALSE) + labs(title = "再生可能エネルギーによる発電割合と一人当たりの二酸化炭素排出量の相関") + geom_text(aes(50,30,label = "相関係数: -0.39024200"))
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |> lm(co2pcap ~ renewable, data = _)
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |>
ggplot(aes(renewable, co2pcap)) + geom_point() + geom_smooth(formula = 'y~x', method = "lm", se = FALSE) + labs(title = "再生可能エネルギーによる発電割合と一人当たりの二酸化炭素排出量の相関") + geom_text(aes(50,30,label = "相関係数: -0.39024200\ny = 5.79145 + -0.04691 x"))
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |>
ggplot(aes(renewable, co2pcap)) + geom_point() + geom_smooth(formula = 'y~x', method = "lm", se = FALSE) + labs(title = "再生可能エネルギーによる発電割合と一人当たりの二酸化炭素排出量の相関") + geom_text(aes(60,30,label = "相関係数: -0.39024200\ny = 5.79145 - 0.04691 x"))
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |> lm(co2pcap ~ renewable, data = _) |> broom::tidy()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |>
drop_na(renewable, co2pcap) |> lm(co2pcap ~ renewable, data = _) |> broom::tidy()
wdi_data <- read_csv("../../../../../economics/data/wdi_data.csv")
wdi_data <- read_csv("../../../../../../economics/data/wdi_data.csv")
wdi_data <- read_csv("../../../../../../economics/practicum/data/wdi_data.csv")
wdi_data <- read_csv("../../../../../../economics/ges001/practicum/data/wdi_data.csv")
wdi_data |> distinct(Indicator.Code) |> pull() |> length()
wdi_data |> distinct(Indicator.Code) |> pull() |> length()
wdi_data |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> drop_na(value) |>
group_by(Country.Code, year) |>
summarize(n = n()) |> ungroup() |>
ggplot(aes(year, n, linetype = Country.Code)) + geom_line()
wdi_data |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> drop_na(value) |>
group_by(Country.Code, year) |>
summarize(n = n()) |> ungroup() |>
ggplot(aes(year, n, col = Country.Name)) + geom_line()
wdi_data |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> drop_na(value) |>
group_by(Country.Name, year) |>
summarize(n = n()) |> ungroup() |>
ggplot(aes(year, n, col = Country.Name)) + geom_line()
wdi_data |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> drop_na(value) |>
group_by(Country.Name, year) |>
summarize(n = n()) |> ungroup() |>
ggplot(aes(year, n, linetype = Country.Name)) + geom_line()
wdi_data |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> drop_na(value) |>
group_by(Country.Name, year) |>
summarize(n = n()) |> ungroup() |>
ggplot(aes(year, n, col = Country.Name)) + geom_line()
wdi_data |> filter(year == 2015) |>
filter(Country.Code %in% c("CHN", "JPN", "USA", "RUS", "GBR", "IND", "DEU", "FRA", "ITA")) |> drop_na(value) |>
group_by(Country.Name, Country.Code) |>
summarize(n = n()) |> arrange(desc(n))
wdi_data_selected9 <- read_csv("../../../../../../economics/ges001/practicum/data/wdi_data_selected9.csv")
wdi_data_selected9 |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |>
drop_na(value) |> ggplot(aes(year, n, col = Country.Name)) + geom_line()
wdi_data_selected9 |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> ggplot(aes(year, n, col = Country.Name)) + geom_line()
wdi_data_selected9 |> filter(year == 2015)
wdi_data_selected9 |> filter(year == 2015) |> arrange(desc(n))
wdi_data_selected9 |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> ggplot(aes(year, n, col = Country.Name)) + geom_line() +
labs(title = "アメリカ合衆国、日本、中国、ロシアの提供する国別データ数")
write_csv(wdi_data_selected9, "data/wdi_data_selected9.csv")
wdi_data_selected9 <- read_csv("data/wdi_data_selected9.csv")
df_pop_related_extra |> mutate(birth_rate = birth_rate*2, death_rate = death_rate*2) |> pivot_longer(pop:old) |> filter(name %in% c("birth_rate", "death_rate", "young", "old")) |>
filter(country == "Japan") |> drop_na(value) |>
ggplot(aes(year, value, col = name)) + geom_line() +
scale_y_continuous(
"value",
sec.axis = sec_axis(~ . / 2, name = "出生率・死亡率（千人あたり）")) +
labs(title = "日本の出生率・死亡率（千人毎）・労働人口に対する高齢・若年扶養率（％）", y = "若年扶養率・老年扶養率（%）")
df_pop_related_extra |> mutate(birth_rate = birth_rate*2, death_rate = death_rate*2) |> pivot_longer(pop:old) |> filter(name %in% c("birth_rate", "death_rate", "young", "old")) |>
filter(country == "Japan") |> drop_na(value) |>
ggplot(aes(year, value, col = name)) + geom_line() +
scale_y_continuous(
"value",
sec.axis = sec_axis(~ . / 2, name = "出生率・死亡率（千人あたり）")) +
labs(title = "日本の出生率・死亡率（千人毎）\n労働人口に対する高齢・若年扶養率（％）", y = "若年扶養率・老年扶養率（%）")
df_pop_related_extra |> mutate(birth_rate = birth_rate*2, death_rate = death_rate*2) |> pivot_longer(pop:old, values_drop_na = "若年扶養率・老年扶養率（%）") |> filter(name %in% c("birth_rate", "death_rate", "young", "old")) |>
filter(country == "Japan") |> drop_na(`若年扶養率・老年扶養率（%）`) |>
ggplot(aes(year, `若年扶養率・老年扶養率（%）`, col = name)) + geom_line() +
scale_y_continuous(
"`若年扶養率・老年扶養率（%）`",
sec.axis = sec_axis(~ . / 2, name = "出生率・死亡率（千人あたり）")) +
labs(title = "日本の出生率・死亡率（千人毎）\n労働人口に対する高齢・若年扶養率（％）")
df_pop_related_extra |> mutate(birth_rate = birth_rate*2, death_rate = death_rate*2) |> pivot_longer(pop:old, values_drop_na = "若年扶養率・老年扶養率（%）") |> filter(name %in% c("birth_rate", "death_rate", "young", "old")) |>
filter(country == "Japan") |> drop_na(`若年扶養率・老年扶養率（%）`) |>
ggplot(aes(year, `若年扶養率・老年扶養率（%）`, col = name)) + geom_line() +
scale_y_continuous(
"若年扶養率・老年扶養率（%）",
sec.axis = sec_axis(~ . / 2, name = "出生率・死亡率（千人あたり）")) +
labs(title = "日本の出生率・死亡率（千人毎）\n労働人口に対する高齢・若年扶養率（％）")
df_pop_related_extra |> mutate(birth_rate = birth_rate*2, death_rate = death_rate*2) |> pivot_longer(pop:old, values_to = "若年扶養率・老年扶養率（%）") |> filter(name %in% c("birth_rate", "death_rate", "young", "old")) |>
filter(country == "Japan") |> drop_na(`若年扶養率・老年扶養率（%）`) |>
ggplot(aes(year, `若年扶養率・老年扶養率（%）`, col = name)) + geom_line() +
scale_y_continuous(
"若年扶養率・老年扶養率（%）",
sec.axis = sec_axis(~ . / 2, name = "出生率・死亡率（千人あたり）")) +
labs(title = "日本の出生率・死亡率（千人毎）\n労働人口に対する高齢・若年扶養率（％）")
library(tidyverse)
library(WDI)
library(showtext)
knitr::opts_chunk$set(fig.showtext=TRUE)
library(plotly)
REGION <- c("1A", "1W", "4E", "6F", "6N", "6X", "7E", "8S", "A4", "A5",
"A9", "B1", "B2", "B3", "B4", "B6", "B7", "B8", "C4", "C5", "C6",
"C7", "C8", "C9", "D2", "D3", "D4", "D5", "D6", "D7", "EU", "F1",
"F6", "M1", "M2", "N6", "OE", "R6", "S1", "S2", "S3", "S4", "T2",
"T3", "T4", "T5", "T6", "T7", "V1", "V2", "V3", "V4", "XC", "XD",
"XE", "XF", "XG", "XH", "XI", "XJ", "XL", "XM", "XN", "XO", "XP",
"XQ", "XT", "XU", "XY", "Z4", "Z7", "ZB", "ZF", "ZG", "ZH", "ZI",
"ZJ", "ZQ", "ZT")
df_pop_related_extra <- read_csv("data/pop_related_extra.csv")
df_pop_related_extra |> filter(country == "Japan") |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "日本の総人口")
df_pop_related_extra |> mutate(birth_rate = birth_rate*2, death_rate = death_rate*2) |> pivot_longer(pop:old, values_to = "若年扶養率・老年扶養率（%）") |> filter(name %in% c("birth_rate", "death_rate", "young", "old")) |>
filter(country == "Japan") |> drop_na(`若年扶養率・老年扶養率（%）`) |>
ggplot(aes(year, `若年扶養率・老年扶養率（%）`, col = name)) + geom_line() +
scale_y_continuous(
"若年扶養率・老年扶養率（%）",
sec.axis = sec_axis(~ . / 2, name = "出生率・死亡率（千人あたり）")) +
labs(title = "日本の出生率・死亡率（千人毎）\n労働人口に対する高齢・若年扶養率（％）")
df_pop_related_extra |> filter(year == 2019, income == "High income", pop > 10000000) |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", subtitle = "人口1000万人以上（色は地域別）人口制限なしでも日本は最下位", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(pop > 50000000, pop < 150000000, income == "High income") |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "5000万人以上15000万人以下（米国以外）の高所得の国の人口推移")
df_pop_related_extra |> filter(pop > 50000000, income == "High income") |>
pivot_longer(pop:old) |> filter(name %in% c("young", "old")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line() + labs(title = "5000万人以上の高所得の国の高齢者・若年者扶養率")
df_gini_2.15 <- read_csv("data/gini_2.15.csv")
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> ggplot(aes(region, value, fill = name)) + geom_boxplot() +
labs(title = "Gini係数が高い二地域の、絶対的貧困の割合", subtitle = "gini: ジニ指数、under_2.15: 1日2.15ドル以下で生活する割合", fill = "", x = "", y = "パーセント")
outlier_gini <- df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Sub-Saharan Africa", name == "gini") |> arrange(desc(value)) |> slice_head(n=2)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Latin America & Caribbean", name == "under_2.15") |> arrange(desc(value)) |> slice_head(n=3) |> rbind(outlier_gini)
df_environment <- read_csv("data/environment.csv")
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |>
ggplot(aes(renewable, co2pcap)) + geom_point() + geom_smooth(formula = 'y~x', method = "lm", se = FALSE) + labs(title = "再生可能エネルギーによる発電割合と一人当たりの二酸化炭素排出量の相関") + geom_text(aes(60,30,label = "相関係数: -0.39024200\ny = 5.79145 - 0.04691 x"))
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |>
drop_na(renewable, co2pcap) |> lm(co2pcap ~ renewable, data = _) |> broom::tidy()
wdi_data_selected9 <- read_csv("data/wdi_data_selected9.csv")
wdi_data_selected9 |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> ggplot(aes(year, n, col = Country.Name)) + geom_line() +
labs(title = "アメリカ合衆国、日本、中国、ロシアの提供する国別データ数")
wdi_data_selected9 |> filter(year == 2015) |> arrange(desc(n))
df_pop_related_extra |> filter(year == 2019, income == "High income", pop > 10000000) |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", subtitle = "人口1000万人以上（色は地域別）人口制限なしでも日本は最下位", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(pop > 50000000, income == "High income") |>
pivot_longer(pop:old) |> filter(name %in% c("young", "old")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line() + labs(title = "5000万人以上の高所得の国の高齢者・若年者扶養率", y = "扶養率（%）")
wdi_data_selected9 |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> ggplot(aes(year, n, col = Country.Name)) + geom_line() +
labs(title = "アメリカ合衆国、日本、中国、ロシアの提供する国別データ数", y = "指標数")
library(tidyverse)
library(WDI)
library(showtext)
knitr::opts_chunk$set(fig.showtext=TRUE)
library(plotly)
REGION <- c("1A", "1W", "4E", "6F", "6N", "6X", "7E", "8S", "A4", "A5",
"A9", "B1", "B2", "B3", "B4", "B6", "B7", "B8", "C4", "C5", "C6",
"C7", "C8", "C9", "D2", "D3", "D4", "D5", "D6", "D7", "EU", "F1",
"F6", "M1", "M2", "N6", "OE", "R6", "S1", "S2", "S3", "S4", "T2",
"T3", "T4", "T5", "T6", "T7", "V1", "V2", "V3", "V4", "XC", "XD",
"XE", "XF", "XG", "XH", "XI", "XJ", "XL", "XM", "XN", "XO", "XP",
"XQ", "XT", "XU", "XY", "Z4", "Z7", "ZB", "ZF", "ZG", "ZH", "ZI",
"ZJ", "ZQ", "ZT")
df_pop_related_extra <- read_csv("data/pop_related_extra.csv")
df_pop_related_extra |> filter(country == "Japan") |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "日本の総人口")
df_pop_related_extra |> mutate(birth_rate = birth_rate*2, death_rate = death_rate*2) |> pivot_longer(pop:old, values_to = "若年扶養率・老年扶養率（%）") |> filter(name %in% c("birth_rate", "death_rate", "young", "old")) |>
filter(country == "Japan") |> drop_na(`若年扶養率・老年扶養率（%）`) |>
ggplot(aes(year, `若年扶養率・老年扶養率（%）`, col = name)) + geom_line() +
scale_y_continuous(
"若年扶養率・老年扶養率（%）",
sec.axis = sec_axis(~ . / 2, name = "出生率・死亡率（千人あたり）")) +
labs(title = "日本の出生率・死亡率（千人毎）\n労働人口に対する高齢・若年扶養率（％）")
df_pop_related_extra |> filter(year == 2019, income == "High income", pop > 10000000) |>
drop_na(birth_rate, death_rate) |>
mutate(pop_rate = birth_rate/death_rate, .after = death_rate) |>
arrange(desc(pop_rate)) |>
ggplot(aes(fct_rev(fct_inorder(country)), pop_rate, fill = region)) + geom_col() + coord_flip() + labs(title = "2019年時点（コロナの影響を除くため）:高所得国の出生率/死亡率ランキング", subtitle = "人口1000万人以上（色は地域別）人口制限なしでも日本は最下位", x = "", y = "", caption = "世界開発指標：出生率 = SP.DYN.CBRT.IN,死亡率 = SP.DYN.CDRT.IN") +
theme(legend.position = "none")
df_pop_related_extra |> filter(pop > 50000000, pop < 150000000, income == "High income") |>
ggplot(aes(year, pop, col =  country)) + geom_line() +
labs(title = "5000万人以上15000万人以下（米国以外）の高所得の国の人口推移")
df_pop_related_extra |> filter(pop > 50000000, income == "High income") |>
pivot_longer(pop:old) |> filter(name %in% c("young", "old")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line() + labs(title = "5000万人以上の高所得の国の高齢者・若年者扶養率", y = "扶養率（%）")
df_gini_2.15 <- read_csv("data/gini_2.15.csv")
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |> ggplot(aes(region, value, fill = name)) + geom_boxplot() +
labs(title = "Gini係数が高い二地域の、絶対的貧困の割合", subtitle = "gini: ジニ指数、under_2.15: 1日2.15ドル以下で生活する割合", fill = "", x = "", y = "パーセント")
outlier_gini <- df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Sub-Saharan Africa", name == "gini") |> arrange(desc(value)) |> slice_head(n=2)
df_gini_2.15 |> pivot_longer(gini:under_2.15) |> drop_na(value) |> group_by(country) |> filter(year == max(year)) |> ungroup() |> select(country, year, name, value, region) |>
filter(region %in% c("Sub-Saharan Africa", "Latin America & Caribbean")) |>
filter(region == "Latin America & Caribbean", name == "under_2.15") |> arrange(desc(value)) |> slice_head(n=3) |> rbind(outlier_gini)
df_environment <- read_csv("data/environment.csv")
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(co2pcap, forest, renewable, fossil, nuclear) |>
select(co2pcap, forest, renewable, fossil, nuclear) |> cor() |> as.data.frame()
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |> # 地域以外（国のみ選択）
drop_na(renewable, co2pcap) |>
ggplot(aes(renewable, co2pcap)) + geom_point() + geom_smooth(formula = 'y~x', method = "lm", se = FALSE) + labs(title = "再生可能エネルギーによる発電割合と一人当たりの二酸化炭素排出量の相関") + geom_text(aes(60,30,label = "相関係数: -0.39024200\ny = 5.79145 - 0.04691 x"))
df_environment |> filter(!(iso2c %in% REGION)) |> filter(year == 2014) |>
drop_na(renewable, co2pcap) |> lm(co2pcap ~ renewable, data = _) |> broom::tidy()
wdi_data_selected9 <- read_csv("data/wdi_data_selected9.csv")
wdi_data_selected9 |> filter(Country.Code %in% c("CHN", "JPN", "RUS", "USA")) |> ggplot(aes(year, n, col = Country.Name)) + geom_line() +
labs(title = "アメリカ合衆国、日本、中国、ロシアの提供する国別データ数", y = "指標数")
wdi_data_selected9 |> filter(year == 2015) |> arrange(desc(n))
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-main.Rmd")
