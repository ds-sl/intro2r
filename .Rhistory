drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=income)) + geom_point()
df_pop_extra |>
filter(!(iso2c %in% REGION)) |>
filter(year %in% c(1960, 1990, 2020)) |>
filter(!(income %in% c(NA, "Not classified"))) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=income)) + geom_point() +
facet_wrap(~ year) + theme(legend.position = "bottom")
df_pop_extra |>
filter(!(iso2c %in% REGION)) |>
filter(year %in% c(1960, 1990, 2020)) |>
filter(!(income %in% c(NA, "Not classified"))) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=income)) + geom_point() +
facet_wrap(~ year) + theme(legend.position = "bottom") +
labs(col = "")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-2.Rmd")
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(country == "World") |>
ggplot(aes(year, value, col = name)) + geom_line()
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% c("BD", "BR", "CN", "ID", "NG", "JP")) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% c("BD", "BR", "CN", "ID", "NG", "JP")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("BD", "BR", "CN", "ID", "NG", "JP")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year == 2020) |>
filter(!(income %in% c(NA, "Not classified"))) |>
drop_na(young, old) |>
ggplot(aes(young, old, col=income)) + geom_point()
df_pop_extra |>
filter(region == "Sub-Saharan Africa") |> filter(year == 2020) |>
drop_na(young, old) |>
ggplot(aes(young, old, col=income)) + geom_point()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("US", "GB", "CN", "DE", "FR", "JP")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("US", "GB", "CN", "DE", "FR", "JP")) |>
ggplot(aes(year, value, col = name, linetype = country)) +
geom_line()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("US", "GB", "CN", "DE", "FR", "JP")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("US", "GB", "CN", "DE", "FR", "JP", "IN")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges00100.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-2.Rmd")
library(tidyverse)
library(WDI)
df_pop_long |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |>
ggplot(aes(year, num, col = name)) + geom_line() +
labs(title = "各指標のデータ量")
df_pop |> filter(country == "World") |>
ggplot(aes(year, pop)) + geom_line() +
labs(title = "世界の人口")
df_pop |> filter(country == "Japan") |>
ggplot(aes(year, pop)) + geom_line() +
labs(title = "日本の人口")
df_pop_long |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |>
ggplot(aes(year, num, col = name)) + geom_line() +
labs(title = "各指標の年毎のデータ数", y = "データ数")
df_pop_long |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |>
ggplot(aes(year, num, col = name)) + geom_line() +
labs(title = "各指標の年毎のデータ数", y = "データ数", x = "年")
library(tidyverse)
library(WDI)
df_gini <- WDI(indicator = c(gini = "SI.POV.GINI",
`5` = "SI.DST.FRST.10",
`10` = "SI.DST.FRST.20",
`30` = "SI.DST.02ND.20",
`50` = "SI.DST.03RD.20",
`70` = "SI.DST.04TH.20",
`90` = "SI.DST.05TH.20",
`95` = "SI.DST.10TH.10"))
write(df_gini, "data/gini.csv")
write(df_gini, "data/gini.csv")
write(df_gini, "data/gini.csv")
df_gini
write_csv(df_gini, "data/gini.csv")
df_gini <- read_csv("data/gini.csv")
df_gini_long <- df_gini |>
pivot_longer(-1:5, names_to = "levels", values_to = "value")
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value")
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value")
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as_numeric(levels))
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels))
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels))
df_gini_long
df_gini_long |> group_by(year) |> drop_na(gini) |>
summarize(n = n()) |>
ggplot(aes(year, n)) + geom_col()
df_gini |> group_by(year) |> drop_na(gini) |>
summarize(n = n()) |>
ggplot(aes(year, n)) + geom_col()
df_gini_long |>
group_by(year, levels) |> drop_na(value) |>
summarize(num = n()) |> arrange(desc(year))
df_gini_long |>
group_by(year, levels) |> drop_na(value) |>
summarize(num = n()) |> distinct(year, num) |> arrange(desc(year))
df_gini_long |>
group_by(year, levels) |> drop_na(value) |>
summarize(num = n()) |> distinct(year, num) |> arrange(desc(year))
df_gini_long |>
group_by(year, levels) |> drop_na(value) |>
summarize(num = n()) |> distinct(year, num) |>
ggplot(aes(year, num)) + geom_col()
df_gini_long |> filter(year == 2022) |> drop_na(gini) |>
distinct(country)
df_gini_long |> filter(year == 2022) |> drop_na(gini) |>
ggplot(aes(x = levels, y = value, col = country)) + geom_line()
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-3.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-3.Rmd")
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'))
df_gini_long
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'),
adj = case_when(levels == 5 ~ value*2,
levels == 30 ~ value + lag(value, n=-1),
levels == 50 ~ value + lag(value, n=-1) + lag(value, n=-2),
levels == 70 ~ value + lag(value, n=-1) + lag(value, n=-2) + lag(value, n=-3),
levels == 90 ~ value + lag(value, n=-1) + lag(value, n=-2) + lag(value, n=-3) + lag(value, n=-4),
levels == 95 ~ 100 - value))
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'))
df_gini_long
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'),
adj = case_when(levels == 5 ~ value*2,
levels == 95 ~ value*2))
df_gini_long
df_gini_long |> filter(year == 2022) |> drop_na(gini) |>
ggplot(aes(x = levels, y = adj, col = country)) + geom_line()
df_gini_long |> filter(year == 2022) |> drop_na(gini)
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'),
adj = case_when(levels == 5 ~ value*2,
levels == 95 ~ value*2,
.default = value))
df_gini_long
df_gini_long |> filter(year == 2022) |> drop_na(gini)
df_gini_long |> filter(year == 2022) |> drop_na(gini) |>
ggplot(aes(x = levels, y = adj, col = country)) + geom_line()
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges00100.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges00100.Rmd")
library(tidyverse)
library(WDI)
Sys.setenv(LANG = "en")
df_gdppcap <- WDI(indicator = c(gdp = "NY.GDP.MKTP.PP.KD", pop = "SP.POP.TOTL", gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
write_csv(df_gdppcap, "data/gdppcap.csv")
df_gdppcap <- read_csv("data/gdppcap.csv")
head(df_gdppcap)
str(df_gdppcap)
df_gdppcap |> select(region, income, lending) |> lapply(unique)
COUNTRY <- "World"
df_gdppcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line()
COUNTRY <- "World"
df_gdppcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdp)) + geom_line()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdp) |> arrange(desc(gdp))
df_gdppcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdppcap) |> arrange(desc(gdppcap))
df_gdppcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(pop) |> arrange(desc(pop))
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point()
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point() +
geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE) +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp, color = region, shape = income)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |>
drop_na(gdp, gdppcap, pop) |>
ggplot(aes(gdppcap, gdp, color = region, size = pop)) + geom_point() +
scale_x_log10() + scale_y_log10()
library(plotly)
test <- df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |> drop_na(gdp, pop) |>
ggplot(aes(color = country, shape = region, pop, gdp)) + geom_point() +
scale_x_log10() + scale_y_log10() + theme(legend.position = "none")
test |> ggplotly()
library(plotly)
test <- df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |> drop_na(gdp, pop) |>
ggplot(aes(color = country, shape = region, pop, gdp)) + geom_point() +
scale_x_log10() + scale_y_log10() + theme(legend.position = "none")
test |> ggplotly()
df_gdppcap2 |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none")
df_gdppcap2 |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none")
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram(bins = 10) + scale_x_log10()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram(binwidth = 10000)
library(plotly)
test <- df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |> drop_na(gdp, pop) |>
ggplot(aes(color = country, shape = region, pop, gdp)) + geom_point() +
scale_x_log10() + scale_y_log10() + theme(legend.position = "none")
test |> ggplotly()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram(binwidth = 10000)
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram(bins = 10) + scale_x_log10()
df_gdppcap2 |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none")
library(tidyverse)
library(WDI)
df_pcap <- WDI(indicator = c(gdppcap = "NY.GDP.PCAP.PP.KD", pop = "SP.POP.TOTL"), extra = TRUE)
df_pcap
head(df_pcap)
str(df_pcap)
df_pcap <- df_pcap |> select(c(1,2,4,7,8,9,13))
head(df_cap)
df_pcap <- df_pcap |> select(c(1,2,4,7,8,9,13))
df_pcap <- WDI(indicator = c(gdppcap = "NY.GDP.PCAP.PP.KD", pop = "SP.POP.TOTL"), extra = TRUE)
head(df_pcap)
str(df_pcap)
df_pcap <- df_pcap |> select(c(1,2,4,7,8,9,13))
head(df_pcap)
df_pcap |> select(region, income) |> lapply(unique)
COUNTRY <- "World"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line()
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |>
ggplot(aes(year, gdppcap)) + geom_line()
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line()
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap/365)) + geom_line()
df_pcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdppcap) |> arrange(gdppcap)
df_pcap |> filter(year == 2022, region != "Aggregates") |>
filter(income == "Low income") |>
drop_na(gdppcap) |> arrange(gdppcap)
df_pcap2 |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none")
df_pcap |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none")
df_pcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdppcap) |>
ggplot(aes(gdppcap, fill = region)) +
geom_histogram(col = "black", linewidth = 0.2)
df_pcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdppcap) |>
ggplot(aes(gdppcap, fill = region)) +
geom_histogram(col = "black", linewidth = 0.2, binwidth = 10000)
df_pcap <- WDI(indicator = c(gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
head(df_pcap)
str(df_pcap)
df_pcap <- df_pcap |> select(c(1,2,4,5,8,9,13))
head(df_pcap)
df_pcap <- df_pcap |> select(c(1,2,4,5,7,8,12))
df_pcap <- WDI(indicator = c(gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
head(df_pcap)
str(df_pcap)
df_pcap <- df_pcap |> select(c(1,2,4,5,8,12))
head(df_pcap)
df_pcap |> select(region, income) |> lapply(unique)
COUNTRY <- "World"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line()
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line()
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap/365)) + geom_line()
df_pcap |> filter(year == 2022, region != "Aggregates") |>
filter(income == "Low income") |>
drop_na(gdppcap) |> arrange(gdppcap)
df_pcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram(binwidth = 10000)
df_pcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdppcap) |>
ggplot(aes(gdppcap, fill = region)) +
geom_histogram(col = "black", linewidth = 0.2, binwidth = 10000)
df_pcap |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none")
COUNTRY <- "World"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line() +
labs(title = "世界の一人当たりの GDP の推移")
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line() +
labs(title = "低所得国の一人当たりの GDP の平均の推移")
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap/365)) + geom_line() +
labs(title = "世界の１日一人当たりの GDP の平均の推移")
df_pcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdppcap) |>
ggplot(aes(gdppcap, fill = region)) +
geom_histogram(col = "black", linewidth = 0.2, binwidth = 10000) +
labs(title = "2022年の 一人当たりの GDP の国の分布",
subtitle = "地域情報付き")
df_pcap |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none") +
labs(title = "一人当たりの GDP の所得レベルごとの国の分布ほ箱ひげ図")
df_pcap |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none") +
labs(title = "一人当たりの GDP の所得レベルごとの国の分布")
df_pcap |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none") +
labs(title = "一人当たりの GDP の所得レベル毎の分布")
library(tidyverse)
library(WDI)
library(showtext)
showtext_auto()
COUNTRY <- "World"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line() +
labs(title = "世界の一人当たりの GDP の平均の推移")
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line() +
labs(title = "低所得国の一人当たりの GDP の平均の推移")
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap/365)) + geom_line() +
labs(title = "世界の１日一人当たりの GDP の平均の推移")
df_pcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram(binwidth = 10000) +
labs(title = "2022年の 一人当たりの GDP の国の分布")
df_pcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdppcap) |>
ggplot(aes(gdppcap, fill = region)) +
geom_histogram(col = "black", linewidth = 0.2, binwidth = 10000) +
labs(title = "2022年の 一人当たりの GDP の国の分布",
subtitle = "地域情報付き")
df_pcap |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none") +
labs(title = "一人当たりの GDP の所得レベル毎の分布")
library(tidyverse)
library(WDI)
library(showtext)
showtext_auto()
showtext_opts(dpi = opts_chunk$get()$dpi)
library(tidyverse)
library(WDI)
library(showtext)
showtext_auto()
library(tidyverse)
library(WDI)
library(showtext)
# showtext_auto()
COUNTRY <- "World"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line() +
labs(title = "世界の一人当たりの GDP の平均の推移")
library(tidyverse)
library(WDI)
library(showtext)
showtext_auto(FALSE)
library(tidyverse)
library(WDI)
library(showtext)
showtext_auto(FALSE)
# showtext_auto() # for Word
library(tidyverse)
library(WDI)
library(showtext)
showtext_auto(FALSE)
# showtext_auto() # for Word remove #
COUNTRY <- "World"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line() +
labs(title = "世界の一人当たりの GDP の平均の推移")
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line() +
labs(title = "低所得国の一人当たりの GDP の平均の推移")
COUNTRY <- "Low income"
df_pcap |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap/365)) + geom_line() +
labs(title = "世界の１日一人当たりの GDP の平均の推移")
df_pcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram(binwidth = 10000) +
labs(title = "2022年の 一人当たりの GDP の国の分布")
df_pcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdppcap) |>
ggplot(aes(gdppcap, fill = region)) +
geom_histogram(col = "black", linewidth = 0.2, binwidth = 10000) +
labs(title = "2022年の 一人当たりの GDP の国の分布",
subtitle = "地域情報付き")
df_pcap |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none") +
labs(title = "一人当たりの GDP の所得レベル毎の分布")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges00100.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges00100.Rmd")
R.version.string
R.Version
R.version
