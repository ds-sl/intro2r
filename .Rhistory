drop_na(co2pcap) |> filter(income != "Not classified") |>
ggplot(aes(co2pcap, fill = factor(income, levels = INCOME))) + geom_histogram(bins = 15, col = "black", linewidth = 0.1) +
scale_x_log10() +
labs(title = "Histogram of CO2 per capita in 2020", fill = "")
source("~/Documents/_class/gsclasses/intro_R/intro2r/intro2wdi/my_intro2wdi-2.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/intro2wdi/wdi_temp.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/intro2wdi/wdi_temp.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/intro2wdi/my_intro2wdi-2.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/intro2wdi/test.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/intro2wdi/wdi_temp.Rmd")
library(tidyverse)
library(WDI)
dir.create("data")
df_gdp <- WDI(indicator = "NY.GDP.MKTP.PP.KD")
write_csv(df_gdp, "data/gdp.csv")
df_gdp <- read_csv("data/gdp.csv")
head(df_gdp)
head(df_gdp, 50)
str(df_gdp)
summary(df_gdp)
df_gdp
COUNTRY <- "Japan"
df_gdp |> filter(country == COUNTRY)
COUNTRY <- "Japan"
df_gdp |> filter(country == COUNTRY) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD)) + geom_line()
COUNTRY <- "Japan"
df_gdp |> filter(country == COUNTRY) |> drop_na(NY.GDP.MKTP.PP.KD) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD)) + geom_line()
COUNTRY <- "World"
df_gdp |> filter(country == COUNTRY) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD)) + geom_line()
COUNTRIES <- c("Japan", "China", "India", "United Kingdom", "United States", "Germany", "France")
df_gdp |> filter(country %in% COUNTRIES) |> drop_na(NY.GDP.MKTP.PP.KD) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD, color = country)) + geom_line()
ISO2C <- c("JP", "CN", "ID", "GB", "US", "DE", "FR")
df_gdp |> filter(iso2c %in% ISO2C) |> drop_na(NY.GDP.MKTP.PP.KD) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD, col = iso2c)) + geom_line()
(df_codes <- df_gdp |> distinct(country, iso2c))
WDIsearch(string = "gdp", field = "name")
WDIsearch(string = "NY.GDP.MKTP.PP.KD", field = "indicator", short = FALSE)
df_gdppcap <- WDI(indicator = c(gdp = "NY.GDP.MKTP.PP.KD", pop = "SP.POP.TOTL", gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
df_gdppcap <- read_csv("data/gdppcap.csv")
str(df_gdppcap)
df_gdppcap |> select(region, income, lending) |> lapply(unique)
COUNTRY <- "World"
df_gdppcap |> filter(country == COUNTRY) |>
ggplot(aes(year, gdppcap)) + geom_line()
COUNTRY <- "World"
df_gdppcap |> filter(country == COUNTRY) |>
ggplot(aes(year, pop)) + geom_line()
df_gdppcap2 <- df_gdppcap |> drop_na(pop) |>
mutate(PCAP = gdp/pop, .after = gdppcap)
df_gdppcap2
df_gdppcap2 |> drop_na(gdppcap, PCAP) |> mutate(near = near(gdppcap, PCAP)) |>
summarize(numberofdata = n(), sum(near))
df_gdppcap2 |> filter(!near(gdppcap, PCAP))
df_gdppcap2 |> filter(!near(gdppcap, PCAP)) |> distinct(country) |> pull()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdp) |> arrange(desc(gdp))
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point()
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |> lm(log10(gdp) ~ log10(pop), data = _) |> summary()
df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |> drop_na(gdp, pop) |>
ggplot(aes(pop, gdp, color = region)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp, color = region, shape = income)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |>
drop_na(gdp, gdppcap, pop) |>
ggplot(aes(gdppcap, gdp, color = region, size = pop)) + geom_point() +
scale_x_log10() + scale_y_log10()
install.packages("plotly")
df_gdppcap <- WDI(indicator = c(gdp = "NY.GDP.MKTP.PP.KD", pop = "SP.POP.TOTL", gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
library(tidyverse)
library(WDI)
dir.create("data")
df_gdp <- WDI(indicator = "NY.GDP.MKTP.PP.KD")
write_csv(df_gdp, "data/gdp.csv")
df_gdp <- read_csv("data/gdp.csv")
head(df_gdp)
head(df_gdp, 50)
str(df_gdp)
summary(df_gdp)
df_gdp
COUNTRY <- "Japan"
df_gdp |> filter(country == COUNTRY)
COUNTRY <- "Japan"
df_gdp |> filter(country == COUNTRY) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD)) + geom_line()
COUNTRY <- "Japan"
df_gdp |> filter(country == COUNTRY) |> drop_na(NY.GDP.MKTP.PP.KD) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD)) + geom_line()
COUNTRY <- "World"
df_gdp |> filter(country == COUNTRY) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD)) + geom_line()
COUNTRIES <- c("Japan", "China", "India", "United Kingdom", "United States", "Germany", "France")
df_gdp |> filter(country %in% COUNTRIES) |> drop_na(NY.GDP.MKTP.PP.KD) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD, color = country)) + geom_line()
ISO2C <- c("JP", "CN", "ID", "GB", "US", "DE", "FR")
df_gdp |> filter(iso2c %in% ISO2C) |> drop_na(NY.GDP.MKTP.PP.KD) |>
ggplot(aes(year, NY.GDP.MKTP.PP.KD, col = iso2c)) + geom_line()
(df_codes <- df_gdp |> distinct(country, iso2c))
WDIsearch(string = "gdp", field = "name")
WDIsearch(string = "NY.GDP.MKTP.PP.KD", field = "indicator", short = FALSE)
df_gdppcap <- WDI(indicator = c(gdp = "NY.GDP.MKTP.PP.KD", pop = "SP.POP.TOTL", gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
df_gdppcap <- read_csv("data/gdppcap.csv")
str(df_gdppcap)
df_gdppcap |> select(region, income, lending) |> lapply(unique)
COUNTRY <- "World"
df_gdppcap |> filter(country == COUNTRY) |>
ggplot(aes(year, gdppcap)) + geom_line()
COUNTRY <- "World"
df_gdppcap |> filter(country == COUNTRY) |>
ggplot(aes(year, pop)) + geom_line()
df_gdppcap2 <- df_gdppcap |> drop_na(pop) |>
mutate(PCAP = gdp/pop, .after = gdppcap)
df_gdppcap2
df_gdppcap2 |> drop_na(gdppcap, PCAP) |> mutate(near = near(gdppcap, PCAP)) |>
summarize(numberofdata = n(), sum(near))
df_gdppcap2 |> filter(!near(gdppcap, PCAP))
df_gdppcap2 |> filter(!near(gdppcap, PCAP)) |> distinct(country) |> pull()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdp) |> arrange(desc(gdp))
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point()
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp)) + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2022, region !="Aggregates") |>
drop_na(gdp, pop) |> lm(log10(gdp) ~ log10(pop), data = _) |> summary()
df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |> drop_na(gdp, pop) |>
ggplot(aes(pop, gdp, color = region)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |>
drop_na(gdp, pop) |>
ggplot(aes(pop, gdp, color = region, shape = income)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_gdppcap2 |> filter(year == 2020, region !="Aggregates") |>
drop_na(gdp, gdppcap, pop) |>
ggplot(aes(gdppcap, gdp, color = region, size = pop)) + geom_point() +
scale_x_log10() + scale_y_log10()
install.packages("plotly")
df_gdppcap <- WDI(indicator = c(gdp = "NY.GDP.MKTP.PP.KD", pop = "SP.POP.TOTL", gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
write_csv(df_gdppcap, "data/gdppcap.csv")
df_gdppcap <- read_csv("data/gdppcap.csv")
str(df_gdppcap)
df_gdppcap |> select(region, income, lending) |> lapply(unique)
COUNTRY <- "World"
df_gdppcap |> filter(country == COUNTRY) |>
ggplot(aes(year, gdppcap)) + geom_line()
COUNTRY <- "World"
df_gdppcap |> filter(country == COUNTRY) |>
ggplot(aes(year, pop)) + geom_line()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |>
drop_na(gdp) |> arrange(desc(gdp))
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdp) |>
ggplot(aes(gdp)) + geom_histogram()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdp) |>
ggplot(aes(gdp)) + geom_histogram() + scale_x_log10()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdp) |>
ggplot(aes(gdp)) + geom_histogram(bins = 20) + scale_x_log10()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram(binwidth = 10000)
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(gdppcap) |>
ggplot(aes(gdppcap)) + geom_histogram(bins = 10) + scale_x_log10()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(pop) |>
ggplot(aes(pop)) + geom_histogram(bins = 20) + scale_x_log10()
df_gdppcap |> filter(year == 2022,region != "Aggregates") |> drop_na(pop) |>
group_by(region) |>
ggplot(aes(pop, fill = region)) + geom_histogram(col = "black", linewidth = 0.2) + scale_x_log10()
df_gdppcap |> filter(year == 2022, region != "Aggregates") |> drop_na(pop) |>
group_by(region) |>
ggplot(aes(pop, fill = income)) + geom_histogram(col = "black", linewidth = 0.2) + scale_x_log10()
df_gdppcap2 |> filter(year %in% c(1990,2000, 2010, 2020)) |> drop_na(gdppcap) |>
ggplot(aes(gdppcap, factor(year))) + geom_boxplot() + scale_x_log10()
df_gdppcap2 |> filter(year %in% c(1990,2000, 2010, 2020)) |> drop_na(gdppcap) |>
ggplot(aes(gdppcap, factor(year))) + geom_boxplot() + scale_x_log10() +
labs(title = "Distribution of the GDP per Capita of Countries", subtitle = "Year 1990, 2000, 2010, 2020",
y = "Year", x = "GDP per capita in log10 scale")
df_gdppcap2 |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, income, fill = income)) + geom_boxplot() + scale_x_log10() +
theme(legend.position = "none")
df_gdppcap2 |> filter(year == 2020) |> drop_na(gdppcap) |>
filter(income != "Aggregates") |>
ggplot(aes(gdppcap, factor(income, levels = c("High income", "Upper middle income", "Lower middle income", "Low income")), fill = income)) + geom_boxplot() + scale_x_log10() +
labs(y = "") +
theme(legend.position = "none")
df_gdppcap2 |> filter(year == 2020) |> drop_na(gdp) |>
filter(income != "Aggregates") |>
ggplot(aes(gdp, region, fill = region)) + geom_boxplot() + scale_x_log10() +
theme(legend.position = "none")
df_co2gdp <- WDI(indicator = c(co2pcap = "EN.ATM.CO2E.PC", gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
write_csv(df_co2gdp, "data/co2gdp.csv")
df_co2gdp <- read_csv("data/co2gdp.csv")
COUNTRY <- "World"
df_co2gdp |> filter(country == COUNTRY) |>
ggplot(aes(year, co2pcap)) + geom_line()
ISO2C <- c("JP", "CN", "ID", "GB", "US", "DE", "FR")
df_co2gdp |> filter(iso2c %in% ISO2C) |> drop_na(co2pcap) |>
ggplot(aes(year, co2pcap, linetype = iso2c)) + geom_line()
ISO2C <- c("JP", "CN", "ID", "GB", "US", "DE", "FR")
df_co2gdp |> filter(iso2c %in% ISO2C) |> drop_na(co2pcap) |>
ggplot(aes(year, co2pcap, col = iso2c)) + geom_line()
df_co2gdp |> filter(year == 2020) |> drop_na(co2pcap) |>
ggplot(aes(gdppcap, co2pcap)) + geom_point()
df_co2gdp |> filter(year == 2020) |>
drop_na(gdppcap, co2pcap) |>
ggplot(aes(gdppcap, co2pcap)) + geom_point() +
scale_x_log10() + scale_y_log10()
df_co2gdp |> filter(year == 2020) |>
drop_na(gdppcap, co2pcap) |>
ggplot(aes(gdppcap, co2pcap)) + geom_point() +
geom_smooth(method = "lm", formula = 'y~x', se = FALSE) +
scale_x_log10() + scale_y_log10()
df_co2gdp |> filter(year == 2020) |> drop_na(gdppcap, co2pcap) |>
lm(log10(co2pcap)~log10(gdppcap), data = _) |> summary()
df_secgdp <- WDI(indicator = c(sec = "SE.SEC.ENRR", gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
write_csv(df_secgdp, "data/secgdp.csv")
df_secgdp <- read_csv("data/secgdp.csv")
COUNTRY <- "World"
df_secgdp |> filter(country == COUNTRY) |>
ggplot(aes(year, sec)) + geom_line()
COUNTRIES <- c("Low income", "Low & middle income", "Lower middle income", "Middle income", "Upper middle income", "High income")
df_secgdp |> filter(country %in% COUNTRIES) |> drop_na(sec) |>
ggplot(aes(year, sec, linetype = factor(country, levels = COUNTRIES))) + geom_line() +
labs(linetype = "Income Levels")
df_secgdp |> filter(year == 2020) |> drop_na(sec) |>
ggplot(aes(gdppcap, sec)) + geom_point()
df_secgdp |> filter(year == 2020) |> drop_na(gdppcap, sec) |>
ggplot(aes(gdppcap, sec)) + geom_point() +
scale_x_log10()
df_secgdp |> filter(year == 2020) |> drop_na(gdppcap, sec) |>
ggplot(aes(gdppcap, sec)) + geom_point() +
geom_smooth(method = "lm", formula = 'y~x', se = FALSE) +
scale_x_log10()
df_secgdp |> filter(year == 2020) |> drop_na(gdppcap, sec) |>
lm(sec~log10(gdppcap), data = _) |> summary()
library(tidyverse)
library(WDI)
df_co2gdp <- read_csv("data/co2gdp.csv")
COUNTRY <- "World"
df_co2gdp |> filter(country == COUNTRY) |> drop_na(co2pcap) |>
ggplot(aes(year, co2pcap)) + geom_line() +
labs(title = expression(paste(CO[2], " per capita of the World")),
y = expression(paste(CO[2], " per capita in tons")))
ISO2C <- c("JP", "CN", "ID", "GB", "US", "DE", "FR")
df_co2gdp |> filter(iso2c %in% ISO2C) |> drop_na(co2pcap) |>
ggplot(aes(year, co2pcap, col = iso2c)) + geom_line() +
labs(title = expression(paste(CO[2], " per capita of seven conutries with large GDP")),
subtitle = "China, Germany, France, United Kingdom, India, Japan, United States",
y = expression(paste(CO[2], " per capita in tons")))
COUNTRY <- "World"
df_co2gdp |> filter(country == COUNTRY) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap)) + geom_line() +
labs(title = "GDP per capita of the World")
ISO2C <- c("JP", "CN", "ID", "GB", "US", "DE", "FR")
df_co2gdp |> filter(iso2c %in% ISO2C) |> drop_na(gdppcap) |>
ggplot(aes(year, gdppcap, col = iso2c)) + geom_line() +
labs(title = "GDP per capita of seven countries with large GDP",
subtitle = "China, Germany, France, United Kingdom, India, Japan, United States",
y = "GDP per capita PPP",
caption = "constant 2017 international usd")
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(co2pcap) |> arrange(desc(co2pcap))
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(co2pcap) |> arrange(co2pcap)
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(gdppcap) |> arrange(desc(gdppcap))
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(gdppcap) |> arrange(gdppcap)
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(co2pcap) |> filter(income != "Not classified") |>
ggplot(aes(co2pcap, fill = factor(income, levels = INCOME))) + geom_histogram(bins = 15, col = "black", linewidth = 0.1) +
scale_x_log10() +
labs(title = "Histogram of CO2 per capita in 2020", fill = "")
df_co2gdp |> filter(year %in% c(1990, 2000, 2010, 2020)) |> filter(region != "Aggregates") |>
drop_na(co2pcap) |> filter(co2pcap > 0) |> filter(income != "Not classified") |>
ggplot(aes(co2pcap, fill = factor(year))) +
geom_histogram(bins = 15, col = "black", linewidth = 0.1) +
scale_x_log10() + facet_wrap(~year) +
labs(title = "Histogram of CO2 per capita in 1990, 2000, 2010, 2020", fill = "")
df_co2gdp |> filter(year %in% c(1990, 2000, 2010, 2020)) |> filter(region != "Aggregates") |>
drop_na(co2pcap) |> filter(co2pcap > 0) |> filter(income != "Not classified") |>
ggplot(aes(co2pcap, factor(year), fill = factor(year))) +
geom_boxplot() + scale_x_log10() + labs(y = "") + theme(legend.position = "none")
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(co2pcap) |> filter(co2pcap > 0) |> filter(income != "Not classified") |>
ggplot(aes(co2pcap, factor(income, levels = INCOME), fill = income)) +
geom_boxplot() + scale_x_log10() +
labs(title = "CO2 per capita by income level", y = "", fill = "") +
theme(legend.position = "none")
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(co2pcap) |> filter(co2pcap > 0) |>
ggplot(aes(co2pcap, region, fill = region)) +
geom_boxplot() + scale_x_log10() +
labs(title = "CO2 per capita by region", y = "", fill = "") +
theme(legend.position = "none")
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(gdppcap) |> filter(income != "Not classified") |>
ggplot(aes(gdppcap, fill = factor(income, levels = INCOME))) + geom_histogram(bins = 15, col = "black", linewidth = 0.1) +
scale_x_log10() +
labs(title = "Histogram of GDP per capita in 2020", fill = "")
df_co2gdp |> filter(year %in% c(1990, 2000, 2010, 2020)) |> filter(region != "Aggregates") |>
drop_na(gdppcap) |> filter(gdppcap > 0) |> filter(income != "Not classified") |>
ggplot(aes(gdppcap, fill = factor(year))) +
geom_histogram(bins = 15, col = "black", linewidth = 0.1) +
scale_x_log10() + facet_wrap(~year) +
labs(title = "Histogram of GDP per capita in 1990, 2000, 2010, 2020", fill = "") +
theme(legend.position = "none")
df_co2gdp |> filter(year %in% c(1990, 2000, 2010, 2020)) |> filter(region != "Aggregates") |>
drop_na(gdppcap) |> filter(gdppcap > 0) |> filter(income != "Not classified") |>
ggplot(aes(gdppcap, factor(year), fill = factor(year))) +
geom_boxplot() + scale_x_log10() + labs(y = "") + theme(legend.position = "none")
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(gdppcap) |> filter(gdppcap > 0) |> filter(income != "Not classified") |>
ggplot(aes(gdppcap, factor(income, levels = INCOME), fill = income)) +
geom_boxplot() + scale_x_log10() +
labs(title = "GDP per capita by income level", y = "", fill = "") +
theme(legend.position = "none")
df_co2gdp |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(gdppcap) |> filter(gdppcap > 0) |>
ggplot(aes(gdppcap, region, fill = region)) +
geom_boxplot() + scale_x_log10() +
labs(title = "GDP per capita by region", y = "", fill = "") +
theme(legend.position = "none")
df_co2gdp |> filter(year == 2020) |>
drop_na(gdppcap, co2pcap) |>
ggplot(aes(gdppcap, co2pcap)) + geom_point(aes(col = region)) +
geom_smooth(method = "lm", formula = 'y~x', se = FALSE) +
scale_x_log10() + scale_y_log10() +
labs(title = "GDP per capita vs CO2 per capita",
x = "GDP per capita",
y = expression(paste(CO[2], " per capita in tons")))
df_co2gdp |> filter(year == 2020) |> drop_na(gdppcap, co2pcap) |>
lm(log10(co2pcap)~log10(gdppcap), data = _) |> summary()
WDIsearch(string = "school enrollment.*(% gross)", field = "name", short = FALSE)
df_sec_ter_gdp <- WDI(indicator = c(sec = "SE.SEC.ENRR", ter = "SE.TER.ENRR",
gdppcap = "NY.GDP.PCAP.PP.KD"), extra = TRUE)
write_csv(df_secgdp, "data/sec_ter_gdp.csv")
df_secgdp <- read_csv("data/sec_ter_gdp.csv")
COUNTRY <- "World"
df_sec_ter_gdp |> filter(country == COUNTRY) |> drop_na(sec, ter) |>
ggplot() + geom_line(aes(year, sec), col = "blue") + geom_line(aes(year, ter), col = "red") +
labs(title = "School enrollment; Secondary and Tertiary",
subtitle = "secondary in blue and tertiary in red", y = "")
INCOME <- c("Low income", "Low & middle income", "Lower middle income", "Middle income", "Upper middle income", "High income")
df_sec_ter_gdp |> filter(country %in% INCOME) |> drop_na(sec, ter) |>
ggplot(aes(linetype = factor(country, levels = INCOME))) + geom_line(aes(year, sec), col = "blue") + geom_line(aes(year, ter), col = "red") + ylim(c(0,110)) +
labs(title = "School enrollment; Secondary and Tertiary",
subtitle = "secondary in blue and tertiary in red", linetype = "Income Levels", y = "")
df_sec_ter_gdp |> filter(year == 2020) |> drop_na(sec, ter, gdppcap) |>
ggplot() + geom_point(aes(gdppcap, sec), col = "blue") +
geom_point(aes(gdppcap, ter), col = "red") +
labs(title = "School enrollment; Secondary and Tertiary vs GDP per capita",
subtitle = "secondary in blue and tertiary in red", y = "")
df_sec_ter_gdp |> filter(year == 2020) |> drop_na(sec, ter, gdppcap) |>
ggplot() + geom_point(aes(gdppcap, sec), col = "blue") +
geom_point(aes(gdppcap, ter), col = "red") +
scale_x_log10() +
labs(title = "School enrollment; Secondary and Tertiary vs GDP per capita in log10 scale",
subtitle = "secondary in blue and tertiary in red", y = "")
df_sec_ter_gdp |> filter(year == 2020) |> drop_na(sec, ter, gdppcap) |>
ggplot() + geom_point(aes(gdppcap, sec), col = "blue") +
geom_point(aes(gdppcap, ter), col = "red") +
geom_smooth(aes(gdppcap, sec), col = "blue", method = "lm", formula = 'y~x', se = FALSE) +
geom_smooth(aes(gdppcap, ter), col = "red", method = "lm", formula = 'y~x', se = FALSE) +
scale_x_log10() +
labs(title = "School enrollment; Secondary and Tertiary vs GDP per capita in log10 scale",
subtitle = "secondary in blue and tertiary in red with regression lines", y = "")
df_sec_ter_gdp |> filter(year == 2020) |> drop_na(gdppcap, sec) |>
lm(sec~log10(gdppcap), data = _) |> summary()
df_sec_ter_gdp |> filter(year == 2020) |> drop_na(gdppcap, ter) |>
lm(ter~log10(gdppcap), data = _) |> summary()
df_sec_ter_gdp |> filter(year == 2020, region != "Aggregates") |> drop_na(sec, region) |>
ggplot(aes(sec, region, fill = region)) + geom_boxplot() +
labs(x = "School enrollment, secondary (% gross)", y = "") + theme(legend.position = "none")
df_sec_ter_gdp |> filter(year == 2020, income !="Aggregates") |> drop_na(sec, income) |>
ggplot(aes(sec, factor(income, levels = INCOME), fill = income)) + geom_boxplot() +
labs(title = "Seconary education: School enrollment by income level", x = "School enrollment, secondary (% gross)", y = "") + theme(legend.position = "none")
df_sec_ter_gdp |> filter(year == 2020, region != "Aggregates") |> drop_na(ter, region) |>
ggplot(aes(ter, region, fill = region)) + geom_boxplot() +
labs(x = "School enrollment, tertiary (% gross)", y = "") + theme(legend.position = "none")
df_sec_ter_gdp |> filter(year == 2020, income != "Aggregates") |> drop_na(ter, income) |>
ggplot(aes(ter, factor(income, levels = INCOME), fill = income)) + geom_boxplot() +
labs(title = "Tertiary education: School enrollment by income level", x = "School enrollment, tertiary (% gross)", y = "") + theme(legend.position = "none")
chosen_indicator_1 <- "SE.SEC.ENRR"
short_name_1 <- "sec"
chosen_indicator_2 <- "NY.GDP.PCAP.PP.KD"
short_name_2 <- "gdppcap"
df_yourdata <- WDI(indicator = c(short_name_1 = chosen_indicator_1, short_name_2 = chosen_indicator_2),
extra = TRUE)
write_csv(df_yourdata, "data/yourdata.csv")
df_yourdata <- read_csv("data/yourdata.csv")
COUNTRY <- "World"
df_yourdata |> filter(country == COUNTRY) |> drop_na(short_name_1) |>
ggplot(aes(year, short_name_1)) + geom_line() +
labs(title = "",
y = "")
ISO2C <- c("JP", "CN", "ID", "GB", "US", "DE", "FR")
df_yourdata |> filter(iso2c %in% ISO2C) |> drop_na(short_name_1) |>
ggplot(aes(year, short_name_1, col = iso2c)) + geom_line() +
labs(title = "",
subtitle = "China, Germany, France, United Kingdom, India, Japan, United States",
y = "")
COUNTRY <- "World"
df_yourdata |> filter(country == COUNTRY) |> drop_na(short_name_2) |>
ggplot(aes(year, short_name_2)) + geom_line() +
labs(title = "")
ISO2C <- c("JP", "CN", "ID", "GB", "US", "DE", "FR")
df_yourdata |> filter(iso2c %in% ISO2C) |> drop_na(short_name_2) |>
ggplot(aes(year, short_name_2, col = iso2c)) + geom_line() +
labs(title = "",
subtitle = "China, Germany, France, United Kingdom, India, Japan, United States",
y = "",
caption = "")
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_1) |> arrange(desc(short_name_1))
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_1) |> arrange(short_name_1)
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_2) |> arrange(desc(short_name_2))
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_2) |> arrange(short_name_2)
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_1) |> filter(income != "Not classified") |>
ggplot(aes(short_name_1, fill = factor(income, levels = INCOME))) + geom_histogram(bins = 15, col = "black", linewidth = 0.1) +
scale_x_log10() +
labs(title = "", fill = "")
df_yourdata |> filter(year %in% c(1990, 2000, 2010, 2020)) |> filter(region != "Aggregates") |>
drop_na(short_name_1) |> filter(short_name_1 > 0) |> filter(income != "Not classified") |>
ggplot(aes(short_name_1, fill = factor(year))) +
geom_histogram(bins = 15, col = "black", linewidth = 0.1) +
scale_x_log10() + facet_wrap(~year) +
labs(title = "", fill = "")
df_yourdata |> filter(year %in% c(1990, 2000, 2010, 2020)) |> filter(region != "Aggregates") |>
drop_na(short_name_1) |> filter(short_name_1 > 0) |> filter(income != "Not classified") |>
ggplot(aes(short_name_1, factor(year), fill = factor(year))) +
geom_boxplot() + scale_x_log10() + labs(y = "") + theme(legend.position = "none")
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_1) |> filter(short_name_1 > 0) |> filter(income != "Not classified") |>
ggplot(aes(short_name_1, factor(income, levels = INCOME), fill = income)) +
geom_boxplot() + scale_x_log10() +
labs(title = "", y = "", fill = "") +
theme(legend.position = "none")
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_1) |> filter(short_name_1 > 0) |>
ggplot(aes(short_name_1, region, fill = region)) +
geom_boxplot() + scale_x_log10() +
labs(title = "", y = "", fill = "") +
theme(legend.position = "none")
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_2) |> filter(income != "Not classified") |>
ggplot(aes(short_name_2, fill = factor(income, levels = INCOME))) + geom_histogram(bins = 15, col = "black", linewidth = 0.1) +
scale_x_log10() +
labs(title = "", fill = "")
df_yourdata |> filter(year %in% c(1990, 2000, 2010, 2020)) |> filter(region != "Aggregates") |>
drop_na(short_name_2) |> filter(short_name_2 > 0) |> filter(income != "Not classified") |>
ggplot(aes(short_name_2, fill = factor(year))) +
geom_histogram(bins = 15, col = "black", linewidth = 0.1) +
scale_x_log10() + facet_wrap(~year) +
labs(title = "", fill = "") +
theme(legend.position = "none")
df_yourdata |> filter(year %in% c(1990, 2000, 2010, 2020)) |> filter(region != "Aggregates") |>
drop_na(short_name_2) |> filter(short_name_2 > 0) |> filter(income != "Not classified") |>
ggplot(aes(short_name_2, factor(year), fill = factor(year))) +
geom_boxplot() + scale_x_log10() + labs(y = "") + theme(legend.position = "none")
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_2) |> filter(short_name_2 > 0) |> filter(income != "Not classified") |>
ggplot(aes(short_name_2, factor(income, levels = INCOME), fill = income)) +
geom_boxplot() + scale_x_log10() +
labs(title = "", y = "", fill = "") +
theme(legend.position = "none")
df_yourdata |> filter(year == 2020) |> filter(region != "Aggregates") |>
drop_na(short_name_2) |> filter(short_name_2 > 0) |>
ggplot(aes(short_name_2, region, fill = region)) +
geom_boxplot() + scale_x_log10() +
labs(title = "", y = "", fill = "") +
theme(legend.position = "none")
df_yourdata |> filter(year == 2020) |>
drop_na(short_name_2, short_name_1) |>
ggplot(aes(short_name_2, short_name_1)) + geom_point(aes(col = region)) +
geom_smooth(method = "lm", formula = 'y~x', se = FALSE) +
scale_x_log10() + scale_y_log10() +
labs(title = "",
x = "",
y = "")
df_yourdata |> filter(year == 2020) |> drop_na(short_name_2, short_name_1) |>
lm(log10(short_name_1)~log10(short_name_2), data = _) |> summary()
