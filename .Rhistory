df_pop |>
pivot_longer(5:9, names_to = "name", values_to = "value") |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |>
ggplot(aes(year, num, col = name)) + geom_line()
df_pop |>
pivot_longer(5:9, names_to = "name", values_to = "value") |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |>
ggplot(aes(year, num, col = name)) + geom_line()
df_pop |>
pivot_longer(5:9, names_to = "name", values_to = "value") |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n())
df_pop_long <- df_pop |>
pivot_longer(5:9, names_to = "name", values_to = "value")
df_pop_long |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n())
df_pop_long |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |>
ggplot(aes(year, num, col = name)) + geom_line()
df_pop_long |> filter(country = "World") |>
filter(name %in% c(pop, old, young)) |>
ggplot(aes(year, val, col = name)) + geom_line()
df_pop_long |> filter(country == "World") |>
filter(name %in% c(pop, old, young)) |>
ggplot(aes(year, val, col = name)) + geom_line()
df_pop_long |> filter(country == "World")
df_pop_long |> filter(country == "World") |>
filter(name %in% c("pop", "old", "young")) |>
ggplot(aes(year, val, col = name)) + geom_line()
df_pop_long |> filter(country == "World") |>
filter(name %in% c("pop", "old", "young")) |>
ggplot(aes(year, value, col = name)) + geom_line()
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-9.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-9.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-9.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-1.Rmd")
library(tidyverse)
library(WDI)
df_pop <- read_csv("data/pop.csv")
df_pop
df_pop_long <- df_pop |>
pivot_longer(5:9, names_to = "name", values_to = "value")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-2.Rmd")
library(tidyverse)
library(WDI)
df_pop |> filter(country == "World") |>
ggplot(aes(year, pop)) + geom_line()
df_pop |> filter(year == 2022) |> arrange(desc(pop))
df_pop_extra <- WDI(indicator = c(pop = "SP.POP.TOTL",
birth_rate = "SP.DYN.CBRT.IN",
death_rate = "SP.DYN.CDRT.IN",
young = "SP.POP.DPND.YG",
old = "SP.POP.DPND.OL"), extra = TRUE)
write_csv(df_pop_extra, "data/pop_extra.csv")
df_pop_extra <- read_csv("data/pop_extra.csv")
df_pop_extra |> filter(income == "Aggregates") |> distinct(iso2c) |> pull()
REGION <- df_pop_extra |> filter(income == "Aggregates") |> distinct(iso2c) |> pull()
REGION <- df_pop_extra |> filter(income == "Aggregates") |> distinct(country) |> pull()
df_pop_extra |> filter(income == "Aggregates") |> distinct(country) |> pull()
REGION <- df_pop_extra |> filter(income == "Aggregates") |> distinct(iso2c) |> pull()
df_pop |> filter(!iso2c %in% REGION) |> filter(year == 2022) |>
arrange(desc(pop))
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop))
df_pop |> filter(-(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop))
df_pop |> filter((iso2c !%in% REGION)) |> filter(year == 2022) |>
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop))
glimpse(df_pop_extra)
REGION <- df_pop_extra |> filter(region == "Aggregates") |> distinct(iso2c) |> pull()
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop))
df_pop_extra |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop))
REGION <- df_pop_extra |> drop_na(region) |> distinct(iso2c) |> pull()
df_pop_extra |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop))
REGION <- df_pop_extra |> filter(region %in% c("Aggregates", NA)) |> distinct(iso2c) |> pull()
df_pop_extra |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop))
df_pop %>% filter(iso2c %in% REGION) %>% distinct(country, iso2c)
df_pop_extra |> filter(iso2c == "VN")
df_pop_extra |> distinct(country, iso2c)
df_pop_extra |> filter(!(iso2c %in% REGION)) |> distinct(country, iso2c) |> arrange(country)
length(REGION)
REGION <- REGION + "VN"
length(REGION)
REGION <- c(REGION,  "VN")
length(REGION)
df_pop_extra |> filter(!(iso2c %in% REGION)) |> distinct(country, iso2c) |> arrange(country)
df_pop_extra |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop))
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop))
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop)) |> slice_head(10)
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop)) |> slice(n=10)
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop)) |> slice_head(n=10)
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2021) |>
arrange(desc(pop)) |> slice_head(n=10)
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2020) |>
arrange(desc(pop)) |> slice_head(n=10)
df_pop_long |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |> arrange(desc(year))
df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop)) |> slice_head(n=10)
pop_top11 <- df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop)) |> slice_head(n=11) |> filter(iso2c)
pop_top11 <- df_pop |> filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
arrange(desc(pop)) |> slice_head(n=11) |> pull(iso2c)
df_pop |> filter(iso2c %in% pop_top11) |>
ggplot(aes(year, pop, color = iso2c)) + geom_line()
df_pop |> filter(iso2c %in% pop_top11) |>
filter(!(iso2c %in% c("CN", "IN"))) |>
ggplot(aes(year, pop, color = country)) + geom_line()
df_pop |> filter(iso2c %in% pop_top11) |>
filter(!(iso2c %in% c("CN", "IN"))) |>
ggplot(aes(year, pop, color = factor(country, levels = pop_top11)) + geom_line()
df_pop |> filter(iso2c %in% pop_top11) |>
filter(!(iso2c %in% c("CN", "IN"))) |>
ggplot(aes(year, pop, color = factor(country, levels = pop_top11))) + geom_line()
df_pop |> filter(iso2c %in% pop_top11) |>
filter(!(iso2c %in% c("CN", "IN"))) |>
ggplot(aes(year, pop, color = factor(iso2c, levels = pop_top11))) + geom_line()
df_pop |> filter(iso2c %in% pop_top11) |>
filter(!(iso2c %in% c("CN", "IN"))) |>
ggplot(aes(year, pop, color = factor(iso2c, levels = pop_top11))) + geom_line() + labs(color = "iso2c")
df_pop |> filter(country == "World") |>
ggplot(aes(year, pop)) + geom_line()
df_pop |> filter(country == "Japan") |>
ggplot(aes(year, pop)) + geom_line()
length(REGION)
REGION <- REGION[!"VN"]
length(REGION)
REGION <- REGION[!="VN"]
length(REGION)
REGION <- REGION[REGION !="VN"]
length(REGION)
REGION <- df_pop_extra |> filter(region %in% c("Aggregates", NA)) |> distinct(iso2c) |> pull()
df_pop %>% filter(iso2c %in% REGION) %>% distinct(country, iso2c)
df_pop_extra |> distinct(country, iso2c)
length(REGION)
REGION <- REGION[REGION !="VN"]
length(REGION)
df_pop_extra |> filter(!(iso2c %in% REGION)) |> distinct(country, iso2c) |> arrange(country)
length(REGION)
REGION <- REGION[REGION !="VN"]
length(REGION)
REGION
df_pop_extra |> filter(!(iso2c %in% REGION)) |> distinct(country, iso2c) |> arrange(country)
df_pop |> filter(!(iso2c %in% REGION)) |> distinct(country, iso2c) |> arrange(country)
df_pop |> filter(!(iso2c %in% REGION))
df_pop |> filter(!(iso2c %in% REGION)) |> distinct(country, iso2c) |> arrange(iso2c)
df_pop |> filter(!(iso2c %in% REGION)) |> distinct(country, iso2c) |> arrange(country)
df_pop |> filter(!(iso2c %in% REGION)) |> distinct(country, iso2c) |> arrange(desc(country))
df_pop |> filter(!(iso2c %in% REGION)) |>
distinct(country, iso2c) |> arrange(country)
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(country == "World") |>
ggplot(aes(year, value, col = name)) + geom_line()
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% pop_top11) |>
ggplot(aes(year, value, col = iso2c, linetype = name)) + geom_line()
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% pop_top11) |>
ggplot(aes(year, value, col = iso2c, linetype = name)) +
geom_line() + theme(legend.position = "bottom")
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% pop_top11) |>
ggplot(aes(year, value, col = iso2c, linetype = name)) +
geom_line() + theme(legend.position = c(0.8, 0.2))
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% pop_top11) |>
ggplot(aes(year, value, col = iso2c, linetype = name)) +
geom_line() + theme(legend.position = c(0.2, 0.8))
plot <- ggplot(mtcars, aes(x = mpg, y = disp, color = factor(cyl), shape = factor(vs))) +
geom_point() +
labs(
title = "Scatter Plot",
x = "Miles per Gallon",
y = "Displacement",
color = "Cylinders",
shape = "Engine"
) +
theme(legend.position = c(0.8, 0.2),     # Position the legend on the right
legend.justification = c(1, 0),    # Justify the legend to the right
legend.box.just = "right")         # Align the legend box to the right
# Output the plot
print(plot)
plot <- ggplot(mtcars, aes(x = mpg, y = disp, color = factor(cyl), shape = factor(vs))) +
geom_point() +
labs(
title = "Scatter Plot",
x = "Miles per Gallon",
y = "Displacement",
color = "Cylinders",
shape = "Engine"
) +
guides(
shape = guide_legend(title.position = "bottom"),  # Move the 'shape' legend to the bottom
color = guide_legend(title.position = "right")    # Move the 'color' legend to the right
)
# Output the plot
print(plot)
# Create a sample plot
plot <- ggplot(mtcars, aes(x = mpg, y = disp, color = factor(cyl), shape = factor(vs))) +
geom_point() +
labs(
title = "Scatter Plot",
x = "Miles per Gallon",
y = "Displacement",
color = "Cylinders",
shape = "Engine"
) +
guides(
shape = guide_legend(title.position = "bottom"),  # Move the 'shape' legend to the bottom
color = guide_legend(title.position = "right", direction = "vertical")  # Move the 'color' legend to the right
)
# Output the plot
print(plot)
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% pop_top11) |>
ggplot(aes(year, value, col = iso2c, linetype = name)) +
geom_line() + theme(legend.position = "bottom")
plot <- ggplot(mtcars, aes(x = mpg, y = disp, color = factor(cyl), shape = factor(vs))) +
geom_point() +
labs(
title = "Scatter Plot",
x = "Miles per Gallon",
y = "Displacement",
color = "Cylinders",
shape = "Engine"
) +
guides(
shape = guide_legend(title.position = "bottom"),  # Move the 'shape' legend to the bottom
color = guide_legend(title.position = "right")    # Move the 'color' legend to the right
) +
theme(
legend.position = "none",  # Remove the default legend position
plot.margin = margin(b = 2, r = 5, unit = "lines"),  # Add margin at the bottom and right for the legends
plot.background = element_rect(fill = "white")  # Set a white background for the plot
)
# Output the plot
print(plot)
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% pop_top11) |>
ggplot(aes(year, value, col = iso2c, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% c("BD", "BR", "CN", "ID", "NG")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% c("BD", "BR", "CN", "ID", "NG", "JP")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop |>
filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
ggplot(aes(birth_rate,death_rate,col=region)) + geom_point()
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year == 2022) |>
ggplot(aes(birth_rate,death_rate,col=region)) + geom_point()
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year == 2020) |>
ggplot(aes(birth_rate,death_rate,col=region)) + geom_point()
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year == 2020) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=region)) + geom_point()
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year %in% c(1960, 1990, 2020)) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=region)) + geom_point() +
facet_wrap(~ year)
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year %in% c(1960, 1990, 2020)) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=region)) + geom_point() +
facet_wrap(~ year) + theme(legend.position = "bottom")
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year %in% c(1960, 1990, 2020)) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=income)) + geom_point() +
facet_wrap(~ year) + theme(legend.position = "bottom")
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year == 2020) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=income)) + geom_point()
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year == 2020) |>
filter(!(income %in% c(NA, "Not classified"))) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=income)) + geom_point()
df_pop_extra |>
filter(!(iso2c %in% REGION)) |>
filter(year %in% c(1960, 1990, 2020)) |>
filter(!(income %in% c(NA, "Not classified"))) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=income)) + geom_point() +
facet_wrap(~ year) + theme(legend.position = "bottom")
df_pop_extra |>
filter(!(iso2c %in% REGION)) |>
filter(year %in% c(1960, 1990, 2020)) |>
filter(!(income %in% c(NA, "Not classified"))) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(birth_rate,death_rate,col=income)) + geom_point() +
facet_wrap(~ year) + theme(legend.position = "bottom") +
labs(col = "")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-2.Rmd")
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(country == "World") |>
ggplot(aes(year, value, col = name)) + geom_line()
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% c("BD", "BR", "CN", "ID", "NG", "JP")) |>
drop_na(birth_rate, death_rate) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("birth_rate", "death_rate")) |>
filter(iso2c %in% c("BD", "BR", "CN", "ID", "NG", "JP")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("BD", "BR", "CN", "ID", "NG", "JP")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_extra |>
filter(!(iso2c %in% REGION)) |> filter(year == 2020) |>
filter(!(income %in% c(NA, "Not classified"))) |>
drop_na(young, old) |>
ggplot(aes(young, old, col=income)) + geom_point()
df_pop_extra |>
filter(region == "Sub-Saharan Africa") |> filter(year == 2020) |>
drop_na(young, old) |>
ggplot(aes(young, old, col=income)) + geom_point()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("US", "GB", "CN", "DE", "FR", "JP")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("US", "GB", "CN", "DE", "FR", "JP")) |>
ggplot(aes(year, value, col = name, linetype = country)) +
geom_line()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("US", "GB", "CN", "DE", "FR", "JP")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
df_pop_long |> filter(name %in% c("young", "old")) |>
filter(iso2c %in% c("US", "GB", "CN", "DE", "FR", "JP", "IN")) |>
ggplot(aes(year, value, col = country, linetype = name)) +
geom_line()
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges00100.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-2.Rmd")
library(tidyverse)
library(WDI)
df_pop_long |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |>
ggplot(aes(year, num, col = name)) + geom_line() +
labs(title = "各指標のデータ量")
df_pop |> filter(country == "World") |>
ggplot(aes(year, pop)) + geom_line() +
labs(title = "世界の人口")
df_pop |> filter(country == "Japan") |>
ggplot(aes(year, pop)) + geom_line() +
labs(title = "日本の人口")
df_pop_long |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |>
ggplot(aes(year, num, col = name)) + geom_line() +
labs(title = "各指標の年毎のデータ数", y = "データ数")
df_pop_long |>
group_by(year, name) |> drop_na(value) |>
summarize(num = n()) |>
ggplot(aes(year, num, col = name)) + geom_line() +
labs(title = "各指標の年毎のデータ数", y = "データ数", x = "年")
library(tidyverse)
library(WDI)
df_gini <- WDI(indicator = c(gini = "SI.POV.GINI",
`5` = "SI.DST.FRST.10",
`10` = "SI.DST.FRST.20",
`30` = "SI.DST.02ND.20",
`50` = "SI.DST.03RD.20",
`70` = "SI.DST.04TH.20",
`90` = "SI.DST.05TH.20",
`95` = "SI.DST.10TH.10"))
write(df_gini, "data/gini.csv")
write(df_gini, "data/gini.csv")
write(df_gini, "data/gini.csv")
df_gini
write_csv(df_gini, "data/gini.csv")
df_gini <- read_csv("data/gini.csv")
df_gini_long <- df_gini |>
pivot_longer(-1:5, names_to = "levels", values_to = "value")
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value")
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value")
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as_numeric(levels))
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels))
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels))
df_gini_long
df_gini_long |> group_by(year) |> drop_na(gini) |>
summarize(n = n()) |>
ggplot(aes(year, n)) + geom_col()
df_gini |> group_by(year) |> drop_na(gini) |>
summarize(n = n()) |>
ggplot(aes(year, n)) + geom_col()
df_gini_long |>
group_by(year, levels) |> drop_na(value) |>
summarize(num = n()) |> arrange(desc(year))
df_gini_long |>
group_by(year, levels) |> drop_na(value) |>
summarize(num = n()) |> distinct(year, num) |> arrange(desc(year))
df_gini_long |>
group_by(year, levels) |> drop_na(value) |>
summarize(num = n()) |> distinct(year, num) |> arrange(desc(year))
df_gini_long |>
group_by(year, levels) |> drop_na(value) |>
summarize(num = n()) |> distinct(year, num) |>
ggplot(aes(year, num)) + geom_col()
df_gini_long |> filter(year == 2022) |> drop_na(gini) |>
distinct(country)
df_gini_long |> filter(year == 2022) |> drop_na(gini) |>
ggplot(aes(x = levels, y = value, col = country)) + geom_line()
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-3.Rmd")
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges001-prep-3.Rmd")
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'))
df_gini_long
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'),
adj = case_when(levels == 5 ~ value*2,
levels == 30 ~ value + lag(value, n=-1),
levels == 50 ~ value + lag(value, n=-1) + lag(value, n=-2),
levels == 70 ~ value + lag(value, n=-1) + lag(value, n=-2) + lag(value, n=-3),
levels == 90 ~ value + lag(value, n=-1) + lag(value, n=-2) + lag(value, n=-3) + lag(value, n=-4),
levels == 95 ~ 100 - value))
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'))
df_gini_long
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'),
adj = case_when(levels == 5 ~ value*2,
levels == 95 ~ value*2))
df_gini_long
df_gini_long |> filter(year == 2022) |> drop_na(gini) |>
ggplot(aes(x = levels, y = adj, col = country)) + geom_line()
df_gini_long |> filter(year == 2022) |> drop_na(gini)
df_gini_long <- df_gini |>
pivot_longer(-(1:5), names_to = "levels", values_to = "value") |>
mutate(levels = as.numeric(levels)) |>
mutate(cut = case_when(levels == 5 ~ '0-10',
levels == 10 ~ '0-20',
levels == 30 ~ '20-40',
levels == 50 ~ '40-60',
levels == 70 ~ '60-80',
levels == 90 ~ '80-100',
levels == 95 ~ '90-100'),
adj = case_when(levels == 5 ~ value*2,
levels == 95 ~ value*2,
.default = value))
df_gini_long
df_gini_long |> filter(year == 2022) |> drop_na(gini)
df_gini_long |> filter(year == 2022) |> drop_na(gini) |>
ggplot(aes(x = levels, y = adj, col = country)) + geom_line()
source("~/Documents/_class/gsclasses/intro_R/intro2r/docs/ges001/ges00100.Rmd")
